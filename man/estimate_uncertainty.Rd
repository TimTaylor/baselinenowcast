% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_uncertainty.R
\name{estimate_uncertainty}
\alias{estimate_uncertainty}
\title{Estimate the uncertainty as a function of delay d}
\usage{
estimate_uncertainty(
  triangle_to_nowcast,
  delay_pmf,
  n_history_dispersion = nrow(triangle_to_nowcast)
)
}
\arguments{
\item{triangle_to_nowcast}{matrix of the incomplete reporting triangle to be
nowcasted, with rows representing the time points of reference and columns
representing the delays}

\item{delay_pmf}{vector of delays assumed to be indexed starting at the
first delay column in \code{triangle_to_nowcast}}

\item{n_history_dispersion}{integer indicating the number of reference dates
to be used in the estimate of the dispersion, always starting from the most
recent refrence date. The default is to use the whole reporting triangle,
so \code{nrow(triangle_to_nowcast) - 1}}
}
\value{
a dataframe of dispersion parameters alongside their corresponding
delay d
}
\description{
This function takes in as input the triangle that we want to nowcast and
the delay pmf, which may have been estimated separately. It uses the delay
pmf to compute, for each forecast date and delay, the expected number of
confirmed cases on that forecast date at that delay d. For each delay, it
estimates an independent negative binomial dispersion parameter. This code
is based on the code originally developed by the Karlsruhe Institute of
Technology RESPINOW German Hospitalization Nowcasting Hub,
https://github.com/KITmetricslab/RESPINOW-Hub/blob/39e2b17bc79492b0aee4c0b615a1c8dbf978ef53/code/baseline/functions.R#L142
}
\examples{
#' library(epinowcast)
nat_germany_hosp <-
  germany_covid19_hosp[location == "DE"][age_group == "00+"]
nat_germany_hosp <- enw_filter_report_dates(
  nat_germany_hosp,
  latest_date = "2021-10-01"
)
pobs <- enw_preprocess_data(nat_germany_hosp, max_delay = 21)
triangle_raw <- pobs$reporting_triangle[[1]] |>
  dplyr::select(-`.group`, -reference_date) |>
  as.matrix() |>
  unname()
delay_df <- get_delay_estimate(
  triangle = triangle_raw,
  max_delay = 20,
  n_history = 30
)
disp_df <- estimate_uncertainty(
  triangle_to_nowcast = triangle_raw,
  delay_pmf = delay_df$pmf,
  n_history_dispersion = n_history_dispersion
)
}
